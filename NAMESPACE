importFrom(tcltk,".TkRoot", "tcl", "tclVar", "tkadd", "tkconfigure", "tkdelete",
  "tkdestroy", "tkentryconfigure", "tkgrid", "tkinvoke", "tkmenu", "tkpack",
  "tktitle<-", "tktoplevel", "tkwm.geometry", "tkwm.protocol", "ttkbutton",
  "ttkframe", "ttkseparator")
importFrom(utils, "head", "timestamp")
if(.Platform$OS.type == "windows") {
  importFrom(utils, "winMenuAdd", "winMenuAddItem", "winMenuDel",
    "winMenuDelItem", "winMenuItems", "winMenuNames")
}
importFrom(svMisc, "assignTemp", "getTemp", "isRgui")

export(imgAdd,
       imgDel,
       imgGet,
       imgNames,
       imgRead,
       imgReadPackage,
       imgType,
       menuAdd,
       menuAddItem,
       menuChangeItem,
       menuDel,
       menuDelItem,
       menuInvoke,
       menuItems,
       menuNames,
       menuRead,
       menuReadPackage,
       menuStateItem,
       menuType,
       tkImgAdd,
       tkImgDel,
       tkImgRead,
       tkMenuAdd,
       tkMenuAddItem,
       tkMenuChangeItem,
       tkMenuDel,
       tkMenuDelItem,
       tkMenuInvoke,
       tkMenuItemCall,
       tkMenuItems,
       tkMenuStateItem,
       tkToolAdd,
       tkToolAddItem,
       tkToolChangeItem,
       tkToolDel,
       tkToolDelItem,
       tkToolInvoke,
       tkToolItems,
       tkToolStateItem,
       tkWinAdd,
       tkWinDel,
       toolAdd,
       toolAddItem,
       toolChangeItem,
       toolDel,
       toolDelItem,
       toolInvoke,
       toolItems,
       toolNames,
       toolRead,
       toolReadPackage,
       toolStateItem,
       toolType,
       winAdd,
       winDel,
       winGet,
       winNames,
       winMenuChangeItem,
       winMenuStateItem,
       winMenuInvoke)

S3method(print, guiImg)
S3method(print, guiMenu)
S3method(print, guiTool)
S3method(print, guiWin)
